/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1/calls": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List calls
         * @description Fetch a paginated list of calls associated with a specific OpenPhone number and another number.
         */
        get: operations["listCalls_v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/calls/{callId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a call by ID
         * @description Get a call by its unique identifier.
         */
        get: operations["getCallById_v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/call-recordings/{callId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get recordings for a call
         * @description Retrieve a list of recordings associated with a specific call. The results are sorted chronologically, with the oldest recording segment appearing first in the list.
         */
        get: operations["getCallRecordings_v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/call-summaries/{callId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a summary for a call
         * @description Retrieve an AI-generated summary of a specific call identified by its unique call ID. Call summaries are only available on OpenPhone Business plan.
         */
        get: operations["getCallSummary_v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/call-transcripts/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a transcription for a call
         * @description Retrieve a detailed transcript of a specific call identified by its unique call ID. Call transcripts are only available on OpenPhone business plan.
         */
        get: operations["getCallTranscript_v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/contact-custom-fields": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get contact custom fields
         * @description Custom contact fields enhance your OpenPhone contacts with additional information beyond standard details like name, company, role, emails and phone numbers. These user-defined fields let you capture business-specific data. While you can only create or modify these fields in OpenPhone itself, this endpoint retrieves your existing custom properties. Use this information to accurately map and include important custom data when creating new contacts via the API.
         */
        get: operations["getContactCustomFields_v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/contacts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List contacts
         * @description Retrieve a paginated list of contacts. You can optionally filter the results by providing external IDs and sources. When no external IDs are provided, all contacts for the organization are returned.
         */
        get: operations["listContacts_v1"];
        put?: never;
        /**
         * Create a contact
         * @description Create a contact for a workspace.
         */
        post: operations["createContact_v1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/contacts/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a contact by ID
         * @description Retrieve detailed information about a specific contact in your OpenPhone workspace using the contact's unique identifier.
         */
        get: operations["getContactById_v1"];
        put?: never;
        post?: never;
        /**
         * Delete a contact
         * @description Delete a contact by its unique identifier.
         */
        delete: operations["deleteContact_v1"];
        options?: never;
        head?: never;
        /**
         * Update a contact by ID
         * @description Modify an existing contact in your OpenPhone workspace using the contact's unique identifier.
         */
        patch: operations["updateContactById_v1"];
        trace?: never;
    };
    "/v1/conversations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Conversations
         * @description Fetch a paginated list of conversations of OpenPhone conversations. Can be filtered by user and/or phone numbers. Defaults to all conversations in the OpenPhone organization. Results are returned in descending order based on the most recent conversation.
         */
        get: operations["listConversations_v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/messages": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List messages
         * @description Retrieve a chronological list of messages exchanged between your OpenPhone number and specified participants, with support for filtering and pagination.
         */
        get: operations["listMessages_v1"];
        put?: never;
        /**
         * Send a text message
         * @description Send a text message from your OpenPhone number to a recipient.
         */
        post: operations["sendMessage_v1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/messages/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a message by ID
         * @description Get a message by its unique identifier.
         */
        get: operations["getMessageById_v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/phone-numbers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List phone numbers
         * @description Retrieve the list of phone numbers and users associated with your OpenPhone workspace.
         */
        get: operations["listPhoneNumbers_v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/webhooks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Lists all webhooks
         * @description List all webhooks for a user.
         */
        get: operations["listWebhooks_v1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/webhooks/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a webhook by ID
         * @description Get a webhook by its unique identifier.
         */
        get: operations["getWebhookById_v1"];
        put?: never;
        post?: never;
        /**
         * Delete a webhook by ID
         * @description Delete a webhook by its unique identifier.
         */
        delete: operations["deleteWebhookById_v1"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/webhooks/messages": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create a new webhook for messages
         * @description Creates a new webhook that triggers on events from messages.
         */
        post: operations["createMessageWebhook_v1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/webhooks/calls": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create a new webhook for calls
         * @description Creates a new webhook that triggers on events from calls.
         */
        post: operations["createCallWebhook_v1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/webhooks/call-summaries": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create a new webhook for call summaries
         * @description Creates a new webhook that triggers on events from call summaries.
         */
        post: operations["createCallSummaryWebhook_v1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/webhooks/call-transcripts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create a new webhook for call transcripts
         * @description Creates a new webhook that triggers on events from call transcripts.
         */
        post: operations["createCallTranscriptWebhook_v1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ListPhoneNumbersResponse: {
            data: {
                /**
                 * @description The unique identifier of OpenPhone phone number.
                 * @example PN123bc
                 */
                id: string;
                /**
                 * @description The unique identifier of the group to which the OpenPhone number belongs.
                 * @example 1234
                 */
                groupId: string;
                /**
                 * @description Timestamp of when the phone number was added to the account in ISO 8601 format.
                 * @example  '2022-01-01T00:00:00Z'
                 */
                createdAt: string;
                /**
                 * @description Timestamp of the last update to the phone number's details in ISO 8601 format.
                 * @example  '2022-01-01T00:00:00Z'
                 */
                updatedAt: string;
                /**
                 * @description The display name of the phone number
                 * @example My phone number
                 */
                name: string;
                /**
                 * @description A phone number in E.164 format, including the country code.
                 * @example +15555555555
                 */
                number: string;
                formattedNumber: string | null;
                forward: string | null;
                portRequestId: string | null;
                portingStatus: string | null;
                symbol: string | null;
                users: {
                    email: string;
                    firstName: string | null;
                    groupId: string;
                    id: string;
                    lastName: string | null;
                    role: string;
                }[];
                restrictions: {
                    messaging: {
                        /**
                         * @description The phone-number usage restriction status for a specific region
                         * @example unrestricted
                         * @enum {string}
                         */
                        CA: "restricted" | "unrestricted";
                        /**
                         * @description The phone-number usage restriction status for a specific region
                         * @example unrestricted
                         * @enum {string}
                         */
                        US: "restricted" | "unrestricted";
                        /**
                         * @description The phone-number usage restriction status for a specific region
                         * @example unrestricted
                         * @enum {string}
                         */
                        Intl: "restricted" | "unrestricted";
                    };
                    calling: {
                        /**
                         * @description The phone-number usage restriction status for a specific region
                         * @example unrestricted
                         * @enum {string}
                         */
                        CA: "restricted" | "unrestricted";
                        /**
                         * @description The phone-number usage restriction status for a specific region
                         * @example unrestricted
                         * @enum {string}
                         */
                        US: "restricted" | "unrestricted";
                        /**
                         * @description The phone-number usage restriction status for a specific region
                         * @example unrestricted
                         * @enum {string}
                         */
                        Intl: "restricted" | "unrestricted";
                    };
                };
            }[];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    listCalls_v1: {
        parameters: {
            query: {
                phoneNumberId: string;
                userId?: string;
                participants: string[];
                since?: string;
                createdAfter?: string;
                createdBefore?: string;
                maxResults: number;
                pageToken?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            answeredAt: string | null;
                            answeredBy: string | null;
                            initiatedBy: string | null;
                            /**
                             * @description The direction of the call relative to the OpenPhone number.
                             * @example incoming
                             * @enum {string}
                             */
                            direction: "incoming" | "outgoing";
                            /**
                             * @description The current status of the call.
                             * @example completed
                             * @enum {string}
                             */
                            status: "queued" | "initiated" | "ringing" | "in-progress" | "completed" | "busy" | "failed" | "no-answer" | "canceled" | "missed" | "answered" | "forwarded" | "abandoned";
                            completedAt: string | null;
                            /**
                             * Format: date-time
                             * @description The timestamp when the call record was created, in ISO 8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            /**
                             * @description The total duration of the call in seconds.
                             * @example 60
                             */
                            duration: number;
                            forwardedFrom: (string) | null;
                            forwardedTo: (string) | null;
                            /**
                             * @description The unique identifier of the call.
                             * @example AC123abc
                             */
                            id: string;
                            /**
                             * @description The unique identifier of the OpenPhone number associated with the call.
                             * @example PN123abc
                             */
                            phoneNumberId: string;
                            participants: string[];
                            updatedAt: string | null;
                            /**
                             * @description The unique identifier of the OpenPhone user account associated with the call.
                             * @example US123abc
                             */
                            userId: string;
                        }[];
                        /** @description Total number of items available. ⚠️ Note: `totalItems` is not accurately returning the total number of items that can be paginated. We are working on fixing this issue. */
                        totalItems: number;
                        nextPageToken: string | null;
                    };
                };
            };
            /** @description Too Many Participants */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0101400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Too Many Participants";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Too Many Participants";
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0100401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Phone Number User */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0101403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Phone Number User";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Not Phone Number User";
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0100404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0101500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    getCallById_v1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                callId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            answeredAt: string | null;
                            answeredBy: string | null;
                            initiatedBy: string | null;
                            /**
                             * @description The direction of the call relative to the OpenPhone number.
                             * @example incoming
                             * @enum {string}
                             */
                            direction: "incoming" | "outgoing";
                            /**
                             * @description The current status of the call.
                             * @example completed
                             * @enum {string}
                             */
                            status: "queued" | "initiated" | "ringing" | "in-progress" | "completed" | "busy" | "failed" | "no-answer" | "canceled" | "missed" | "answered" | "forwarded" | "abandoned";
                            completedAt: string | null;
                            /**
                             * Format: date-time
                             * @description The timestamp when the call record was created, in ISO 8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            /**
                             * @description The total duration of the call in seconds.
                             * @example 60
                             */
                            duration: number;
                            forwardedFrom: (string) | null;
                            forwardedTo: (string) | null;
                            /**
                             * @description The unique identifier of the call.
                             * @example AC123abc
                             */
                            id: string;
                            /**
                             * @description The unique identifier of the OpenPhone number associated with the call.
                             * @example PN123abc
                             */
                            phoneNumberId: string;
                            participants: string[];
                            updatedAt: string | null;
                            /**
                             * @description The unique identifier of the OpenPhone user account associated with the call.
                             * @example US123abc
                             */
                            userId: string;
                        };
                    };
                };
            };
            /** @description Too Many Participants */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0101400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Too Many Participants";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Too Many Participants";
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0100401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Phone Number User */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0101403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Phone Number User";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Not Phone Number User";
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0100404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0101500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    getCallRecordings_v1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                callId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            duration: number | null;
                            /**
                             * @description The unique identifier of the call recording.
                             * @example CRwRVK2qBq
                             */
                            id: string;
                            startTime: string | null;
                            status: ("absent" | "completed" | "deleted" | "failed" | "in-progress" | "paused" | "processing" | "stopped" | "stopping") | null;
                            type: string | null;
                            url: string | null;
                        }[];
                    };
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0900400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Bad Request";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0900401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0900403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Forbidden";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0900404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0901500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    getCallSummary_v1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                callId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            /**
                             * @description The unique identifier of the call to which this summary belongs.
                             * @example ACea724hac8c30465bcbcff0b76e4c1c7b
                             */
                            callId: string;
                            nextSteps: string[] | null;
                            /**
                             * @description The status of the call summary.
                             * @example completed
                             * @enum {string}
                             */
                            status: "absent" | "in-progress" | "completed" | "failed";
                            summary: string[] | null;
                            jobs?: {
                                icon: string;
                                name: string;
                                result: {
                                    data: {
                                        name: string;
                                        value: string | number | boolean;
                                    }[];
                                };
                            }[] | null;
                        };
                    };
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0500400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Bad Request";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0500401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0500403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Forbidden";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0500404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0501500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    getCallTranscript_v1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            /**
                             * @description The unique identifier of the call to which this transcript belongs.
                             * @example ACea724hac8c30465bcbcff0b76e4c1c7b
                             */
                            callId: string;
                            /**
                             * Format: date-time
                             * @description The timestamp when the transcription was created, in ISO 8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            dialogue: {
                                /**
                                 * @description The transcribed text of a specific dialogue segment.
                                 * @example Hello, world!
                                 */
                                content: string;
                                /**
                                 * @description The start time of the dialogue segment in seconds, relative to the beginning of the call.
                                 * @example 5.123456
                                 */
                                start: number;
                                /**
                                 * @description The end time of the dialogue segment in seconds, relative to the beginning of the call.
                                 * @example 10.123456
                                 */
                                end: number;
                                identifier: string | null;
                                userId: string | null;
                            }[] | null;
                            /**
                             * @description The total duration of the transcribed call in seconds.
                             * @example 100
                             */
                            duration: number;
                            /**
                             * @description The status of the call transcription.
                             * @example completed
                             * @enum {string}
                             */
                            status: "absent" | "in-progress" | "completed" | "failed";
                        };
                    };
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0600400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Bad Request";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0600401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0600403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Forbidden";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0600404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0601500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    getContactCustomFields_v1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            /**
                             * @description The name of the custom contact field. This name is set by users in the OpenPhone interface when the custom field is created.
                             * @example Inbound Lead
                             */
                            name: string;
                            /**
                             * @description The identifying key for contact custom field.
                             * @example inbound-lead
                             */
                            key: string;
                            /**
                             * @description The data type of the custom contact field, determining what kind of information can be stored and how it should be formatted.
                             * @example boolean
                             * @enum {string}
                             */
                            type: "address" | "boolean" | "date" | "multi-select" | "number" | "string" | "url";
                        }[];
                    };
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0700400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Bad Request";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0700401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0700403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Forbidden";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0700404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0701500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    listContacts_v1: {
        parameters: {
            query: {
                externalIds?: string[];
                sources?: string[];
                maxResults: number;
                pageToken?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            /**
                             * @description The unique identifier of the contact.
                             * @example 664d0db69fcac7cf2e6ec
                             */
                            id: string;
                            externalId: string | null;
                            source: string | null;
                            sourceUrl: string | null;
                            defaultFields: {
                                company: string | null;
                                emails: {
                                    /**
                                     * @description The name for the contact's email address.
                                     * @example company email
                                     */
                                    name: string;
                                    value: string | null;
                                    /**
                                     * @description The unique identifier for the contact email field.
                                     * @example acb123
                                     */
                                    id?: string;
                                }[];
                                firstName: string | null;
                                lastName: string | null;
                                phoneNumbers: {
                                    /**
                                     * @description The name of the contact's phone number.
                                     * @example company phone
                                     */
                                    name: string;
                                    value: string | null;
                                    /**
                                     * @description The unique identifier of the contact phone number field.
                                     * @example acb123
                                     */
                                    id?: string;
                                }[];
                                role: string | null;
                            };
                            customFields: ({
                                /**
                                 * @description The name of the custom contact field. This name is set by users in the OpenPhone interface when the custom field is created.
                                 * @example Inbound Lead
                                 */
                                name: string;
                                /**
                                 * @description The identifying key for contact custom field.
                                 * @example inbound-lead
                                 */
                                key?: string;
                                /**
                                 * @description The unique identifier for the contact custom field.
                                 * @example 66d0d87d534de8fd1c433cec3
                                 */
                                id?: string;
                            } & ({
                                /** @enum {string} */
                                type: "multi-select";
                                value: string[] | null;
                            } | {
                                /** @enum {string} */
                                type: "address" | "string" | "url";
                                value: string | null;
                            } | {
                                /** @enum {string} */
                                type: "boolean";
                                value: boolean | null;
                            } | {
                                /** @enum {string} */
                                type: "date";
                                value: string | null;
                            } | {
                                /** @enum {string} */
                                type: "number";
                                value: number | null;
                            }))[];
                            /**
                             * Format: date-time
                             * @description Timestamp of contact creation in ISO 8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            /**
                             * Format: date-time
                             * @description Timestamp of last contact update in ISO 8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            updatedAt: string;
                            /**
                             * @description The unique identifier of the user who created the contact.
                             * @example US123abc
                             */
                            createdByUserId: string;
                        }[];
                        /** @description Total number of items available. ⚠️ Note: `totalItems` is not accurately returning the total number of items that can be paginated. We are working on fixing this issue. */
                        totalItems: number;
                        nextPageToken: string | null;
                    };
                };
            };
            /** @description Invalid Custom Field Item */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0801400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Invalid Custom Field Item";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Invalid Custom Field Item";
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0800401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Phone Number User */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0801403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Phone Number User";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Not Phone Number User";
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0800404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Conflict */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0800409";
                        /** @constant */
                        status: 409;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Conflict";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0801500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    createContact_v1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    defaultFields: {
                        company?: string | null;
                        emails?: {
                            /**
                             * @description The name for the contact's email address.
                             * @example company email
                             */
                            name: string;
                            value: string | null;
                        }[];
                        firstName: string | null;
                        lastName?: string | null;
                        phoneNumbers?: {
                            /**
                             * @description The name of the contact's phone number.
                             * @example company phone
                             */
                            name: string;
                            value: string | null;
                        }[];
                        role?: string | null;
                    };
                    customFields?: ({
                        /**
                         * @description The identifying key for contact custom field.
                         * @example inbound-lead
                         */
                        key?: string;
                    } & ({
                        value: string[] | null;
                    } | {
                        value: string | null;
                    } | {
                        value: boolean | null;
                    } | {
                        value: string | null;
                    } | {
                        value: number | null;
                    }))[];
                    /**
                     * @description The unique identifier of the user who created the contact.
                     * @example US123abc
                     */
                    createdByUserId?: string;
                    /**
                     * @description The contact's source. Defaults to `null` for contacts created in the UI. Defaults to `public-api` for contacts created via the public API. Cannot be one of the following reserved words: `openphone`, `device`, `csv`, `zapier`, `google-people`, `other` or start with one of the following reserved prefixes: `openphone`, `csv`.
                     * @default public-api
                     * @example public-api
                     * @example custom-hubspot
                     * @example google-calendar
                     */
                    source?: string;
                    /**
                     * Format: uri
                     * @description A link to the contact in the source system.
                     * @example https://openphone.co/contacts/664d0db69fcac7cf2e6ec
                     */
                    sourceUrl?: string;
                    externalId?: string | null;
                };
            };
        };
        responses: {
            /** @description Success */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            /**
                             * @description The unique identifier of the contact.
                             * @example 664d0db69fcac7cf2e6ec
                             */
                            id: string;
                            externalId: string | null;
                            source: string | null;
                            sourceUrl: string | null;
                            defaultFields: {
                                company: string | null;
                                emails: {
                                    /**
                                     * @description The name for the contact's email address.
                                     * @example company email
                                     */
                                    name: string;
                                    value: string | null;
                                    /**
                                     * @description The unique identifier for the contact email field.
                                     * @example acb123
                                     */
                                    id?: string;
                                }[];
                                firstName: string | null;
                                lastName: string | null;
                                phoneNumbers: {
                                    /**
                                     * @description The name of the contact's phone number.
                                     * @example company phone
                                     */
                                    name: string;
                                    value: string | null;
                                    /**
                                     * @description The unique identifier of the contact phone number field.
                                     * @example acb123
                                     */
                                    id?: string;
                                }[];
                                role: string | null;
                            };
                            customFields: ({
                                /**
                                 * @description The name of the custom contact field. This name is set by users in the OpenPhone interface when the custom field is created.
                                 * @example Inbound Lead
                                 */
                                name: string;
                                /**
                                 * @description The identifying key for contact custom field.
                                 * @example inbound-lead
                                 */
                                key?: string;
                                /**
                                 * @description The unique identifier for the contact custom field.
                                 * @example 66d0d87d534de8fd1c433cec3
                                 */
                                id?: string;
                            } & ({
                                /** @enum {string} */
                                type: "multi-select";
                                value: string[] | null;
                            } | {
                                /** @enum {string} */
                                type: "address" | "string" | "url";
                                value: string | null;
                            } | {
                                /** @enum {string} */
                                type: "boolean";
                                value: boolean | null;
                            } | {
                                /** @enum {string} */
                                type: "date";
                                value: string | null;
                            } | {
                                /** @enum {string} */
                                type: "number";
                                value: number | null;
                            }))[];
                            /**
                             * Format: date-time
                             * @description Timestamp of contact creation in ISO 8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            /**
                             * Format: date-time
                             * @description Timestamp of last contact update in ISO 8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            updatedAt: string;
                            /**
                             * @description The unique identifier of the user who created the contact.
                             * @example US123abc
                             */
                            createdByUserId: string;
                        };
                    };
                };
            };
            /** @description Invalid Custom Field Item */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0801400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Invalid Custom Field Item";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Invalid Custom Field Item";
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0800401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Phone Number User */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0801403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Phone Number User";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Not Phone Number User";
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0800404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Conflict */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0800409";
                        /** @constant */
                        status: 409;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Conflict";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0801500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    getContactById_v1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            /**
                             * @description The unique identifier of the contact.
                             * @example 664d0db69fcac7cf2e6ec
                             */
                            id: string;
                            externalId: string | null;
                            source: string | null;
                            sourceUrl: string | null;
                            defaultFields: {
                                company: string | null;
                                emails: {
                                    /**
                                     * @description The name for the contact's email address.
                                     * @example company email
                                     */
                                    name: string;
                                    value: string | null;
                                    /**
                                     * @description The unique identifier for the contact email field.
                                     * @example acb123
                                     */
                                    id?: string;
                                }[];
                                firstName: string | null;
                                lastName: string | null;
                                phoneNumbers: {
                                    /**
                                     * @description The name of the contact's phone number.
                                     * @example company phone
                                     */
                                    name: string;
                                    value: string | null;
                                    /**
                                     * @description The unique identifier of the contact phone number field.
                                     * @example acb123
                                     */
                                    id?: string;
                                }[];
                                role: string | null;
                            };
                            customFields: ({
                                /**
                                 * @description The name of the custom contact field. This name is set by users in the OpenPhone interface when the custom field is created.
                                 * @example Inbound Lead
                                 */
                                name: string;
                                /**
                                 * @description The identifying key for contact custom field.
                                 * @example inbound-lead
                                 */
                                key?: string;
                                /**
                                 * @description The unique identifier for the contact custom field.
                                 * @example 66d0d87d534de8fd1c433cec3
                                 */
                                id?: string;
                            } & ({
                                /** @enum {string} */
                                type: "multi-select";
                                value: string[] | null;
                            } | {
                                /** @enum {string} */
                                type: "address" | "string" | "url";
                                value: string | null;
                            } | {
                                /** @enum {string} */
                                type: "boolean";
                                value: boolean | null;
                            } | {
                                /** @enum {string} */
                                type: "date";
                                value: string | null;
                            } | {
                                /** @enum {string} */
                                type: "number";
                                value: number | null;
                            }))[];
                            /**
                             * Format: date-time
                             * @description Timestamp of contact creation in ISO 8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            /**
                             * Format: date-time
                             * @description Timestamp of last contact update in ISO 8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            updatedAt: string;
                            /**
                             * @description The unique identifier of the user who created the contact.
                             * @example US123abc
                             */
                            createdByUserId: string;
                        };
                    };
                };
            };
            /** @description Invalid Custom Field Item */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0801400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Invalid Custom Field Item";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Invalid Custom Field Item";
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0800401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Phone Number User */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0801403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Phone Number User";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Not Phone Number User";
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0800404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Conflict */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0800409";
                        /** @constant */
                        status: 409;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Conflict";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0801500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    deleteContact_v1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Invalid Custom Field Item */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0801400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Invalid Custom Field Item";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Invalid Custom Field Item";
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0800401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Phone Number User */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0801403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Phone Number User";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Not Phone Number User";
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0800404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Conflict */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0800409";
                        /** @constant */
                        status: 409;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Conflict";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0801500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    updateContactById_v1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    externalId?: string | null;
                    source?: string | null;
                    sourceUrl?: string | null;
                    defaultFields?: {
                        company?: string | null;
                        emails?: {
                            /**
                             * @description The name for the contact's email address.
                             * @example company email
                             */
                            name: string;
                            value: string | null;
                            /**
                             * @description The unique identifier for the contact email field.
                             * @example acb123
                             */
                            id?: string;
                        }[];
                        firstName?: string | null;
                        lastName?: string | null;
                        phoneNumbers?: {
                            /**
                             * @description The name of the contact's phone number.
                             * @example company phone
                             */
                            name: string;
                            value: string | null;
                            /**
                             * @description The unique identifier of the contact phone number field.
                             * @example acb123
                             */
                            id?: string;
                        }[];
                        role?: string | null;
                    };
                    customFields?: ({
                        /**
                         * @description The identifying key for contact custom field.
                         * @example inbound-lead
                         */
                        key?: string;
                        /**
                         * @description The unique identifier for the contact custom field.
                         * @example 66d0d87d534de8fd1c433cec3
                         */
                        id?: string;
                    } & ({
                        value: string[] | null;
                    } | {
                        value: string | null;
                    } | {
                        value: boolean | null;
                    } | {
                        value: string | null;
                    } | {
                        value: number | null;
                    }))[];
                };
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            /**
                             * @description The unique identifier of the contact.
                             * @example 664d0db69fcac7cf2e6ec
                             */
                            id: string;
                            externalId: string | null;
                            source: string | null;
                            sourceUrl: string | null;
                            defaultFields: {
                                company: string | null;
                                emails: {
                                    /**
                                     * @description The name for the contact's email address.
                                     * @example company email
                                     */
                                    name: string;
                                    value: string | null;
                                    /**
                                     * @description The unique identifier for the contact email field.
                                     * @example acb123
                                     */
                                    id?: string;
                                }[];
                                firstName: string | null;
                                lastName: string | null;
                                phoneNumbers: {
                                    /**
                                     * @description The name of the contact's phone number.
                                     * @example company phone
                                     */
                                    name: string;
                                    value: string | null;
                                    /**
                                     * @description The unique identifier of the contact phone number field.
                                     * @example acb123
                                     */
                                    id?: string;
                                }[];
                                role: string | null;
                            };
                            customFields: ({
                                /**
                                 * @description The name of the custom contact field. This name is set by users in the OpenPhone interface when the custom field is created.
                                 * @example Inbound Lead
                                 */
                                name: string;
                                /**
                                 * @description The identifying key for contact custom field.
                                 * @example inbound-lead
                                 */
                                key?: string;
                            } & ({
                                /** @enum {string} */
                                type: "multi-select";
                                value: string[] | null;
                            } | {
                                /** @enum {string} */
                                type: "address" | "string" | "url";
                                value: string | null;
                            } | {
                                /** @enum {string} */
                                type: "boolean";
                                value: boolean | null;
                            } | {
                                /** @enum {string} */
                                type: "date";
                                value: string | null;
                            } | {
                                /** @enum {string} */
                                type: "number";
                                value: number | null;
                            }))[];
                            /**
                             * Format: date-time
                             * @description Timestamp of contact creation in ISO 8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            /**
                             * Format: date-time
                             * @description Timestamp of last contact update in ISO 8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            updatedAt: string;
                            /**
                             * @description The unique identifier of the user who created the contact.
                             * @example US123abc
                             */
                            createdByUserId: string;
                        };
                    };
                };
            };
            /** @description Invalid Custom Field Item */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0801400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Invalid Custom Field Item";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Invalid Custom Field Item";
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0800401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Phone Number User */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0801403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Phone Number User";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Not Phone Number User";
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0800404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Conflict */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0800409";
                        /** @constant */
                        status: 409;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Conflict";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0801500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    listConversations_v1: {
        parameters: {
            query: {
                phoneNumber?: string;
                phoneNumbers?: (string)[];
                userId?: string;
                createdAfter?: string;
                createdBefore?: string;
                excludeInactive?: boolean;
                updatedAfter?: string;
                updatedBefore?: string;
                maxResults: number;
                pageToken?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            assignedTo: string | null;
                            createdAt: string | null;
                            deletedAt: string | null;
                            id: string;
                            lastActivityAt: string | null;
                            lastActivityId: string | null;
                            mutedUntil: string | null;
                            name: string | null;
                            participants: string[];
                            phoneNumberId: string;
                            snoozedUntil: string | null;
                            updatedAt: string | null;
                        }[];
                        /** @description Total number of items available. ⚠️ Note: `totalItems` is not accurately returning the total number of items that can be paginated. We are working on fixing this issue. */
                        totalItems: number;
                        nextPageToken: string | null;
                    };
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "1000400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Bad Request";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "1000401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Phone Number User */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "1001403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Phone Number User";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Not Phone Number User";
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "1000404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "1001500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    listMessages_v1: {
        parameters: {
            query: {
                phoneNumberId: string;
                userId?: string;
                participants: string[];
                since?: string;
                createdAfter?: string;
                createdBefore?: string;
                maxResults: number;
                pageToken?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            /**
                             * @description The unique identifier of the message.
                             * @example AC123abc
                             */
                            id: string;
                            to: string[];
                            /**
                             * @description A phone number in E.164 format, including the country code.
                             * @example +15555555555
                             */
                            from: string;
                            /**
                             * @description The content of the message.
                             * @example Hello, world!
                             */
                            text: string;
                            phoneNumberId: string | null;
                            /**
                             * @description The direction of the message relative to the OpenPhone number.
                             * @example incoming
                             * @enum {string}
                             */
                            direction: "incoming" | "outgoing";
                            /**
                             * @description The unique identifier of the user who sent the message. Null for incoming messages.
                             * @example US123abc
                             */
                            userId: string;
                            /**
                             * @description The status of the message.
                             * @example sent
                             * @enum {string}
                             */
                            status: "queued" | "sent" | "delivered" | "undelivered";
                            /**
                             * Format: date-time
                             * @description The timestamp when the message was created at, in ISO 8601 format
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            /**
                             * Format: date-time
                             * @description The timestamp when the message status was last updated, in ISO 8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            updatedAt: string;
                        }[];
                        /** @description Total number of items available. ⚠️ Note: `totalItems` is not accurately returning the total number of items that can be paginated. We are working on fixing this issue. */
                        totalItems: number;
                        nextPageToken: string | null;
                    };
                };
            };
            /** @description A2P Registration Not Approved */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0206400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "A2P Registration Not Approved";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "A2P Registration Not Approved";
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0200401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Enough Credits */
            402: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0200402";
                        /** @constant */
                        status: 402;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Enough Credits";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "The organization does not have enough prepaid credits to send the message";
                    };
                };
            };
            /** @description Not Phone Number User */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0202403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Phone Number User";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Not Phone Number User";
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0200404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0201500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    sendMessage_v1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description The text content of the message to be sent. */
                    content: string;
                    /**
                     * @deprecated
                     * @description DEPRECATED, use "from" instead. OpenPhone phone number ID to send a message from
                     * @example OP1232abc
                     */
                    phoneNumberId?: string;
                    from: string;
                    to: string[];
                    /**
                     * @description The unique identifier of the OpenPhone user sending the message. If not provided, defaults to the phone number owner.
                     * @example US123abc
                     */
                    userId?: string;
                    /**
                     * @description Used to set the status of the related OpenPhone inbox conversation. The default behavior without setting this parameter will be for the message sent to show up as an open conversation in the user's inbox. Setting the parameter to `'done'` would move the conversation to the Done inbox view.
                     * @example done
                     * @enum {string}
                     */
                    setInboxStatus?: "done";
                };
            };
        };
        responses: {
            /** @description Success */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            /**
                             * @description The unique identifier of the message.
                             * @example AC123abc
                             */
                            id: string;
                            to: string[];
                            /**
                             * @description A phone number in E.164 format, including the country code.
                             * @example +15555555555
                             */
                            from: string;
                            /**
                             * @description The content of the message.
                             * @example Hello, world!
                             */
                            text: string;
                            phoneNumberId: string | null;
                            /**
                             * @description The direction of the message relative to the OpenPhone number.
                             * @example incoming
                             * @enum {string}
                             */
                            direction: "incoming" | "outgoing";
                            /**
                             * @description The unique identifier of the user who sent the message. Null for incoming messages.
                             * @example US123abc
                             */
                            userId: string;
                            /**
                             * @description The status of the message.
                             * @example sent
                             * @enum {string}
                             */
                            status: "queued" | "sent" | "delivered" | "undelivered";
                            /**
                             * Format: date-time
                             * @description The timestamp when the message was created at, in ISO 8601 format
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            /**
                             * Format: date-time
                             * @description The timestamp when the message status was last updated, in ISO 8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            updatedAt: string;
                        };
                    };
                };
            };
            /** @description A2P Registration Not Approved */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0206400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "A2P Registration Not Approved";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "A2P Registration Not Approved";
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0200401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Enough Credits */
            402: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0200402";
                        /** @constant */
                        status: 402;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Enough Credits";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "The organization does not have enough prepaid credits to send the message";
                    };
                };
            };
            /** @description Not Phone Number User */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0202403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Phone Number User";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Not Phone Number User";
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0200404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0201500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    getMessageById_v1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            /**
                             * @description The unique identifier of the message.
                             * @example AC123abc
                             */
                            id: string;
                            to: string[];
                            /**
                             * @description A phone number in E.164 format, including the country code.
                             * @example +15555555555
                             */
                            from: string;
                            /**
                             * @description The content of the message.
                             * @example Hello, world!
                             */
                            text: string;
                            phoneNumberId: string | null;
                            /**
                             * @description The direction of the message relative to the OpenPhone number.
                             * @example incoming
                             * @enum {string}
                             */
                            direction: "incoming" | "outgoing";
                            /**
                             * @description The unique identifier of the user who sent the message. Null for incoming messages.
                             * @example US123abc
                             */
                            userId: string;
                            /**
                             * @description The status of the message.
                             * @example sent
                             * @enum {string}
                             */
                            status: "queued" | "sent" | "delivered" | "undelivered";
                            /**
                             * Format: date-time
                             * @description The timestamp when the message was created at, in ISO 8601 format
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            /**
                             * Format: date-time
                             * @description The timestamp when the message status was last updated, in ISO 8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            updatedAt: string;
                        };
                    };
                };
            };
            /** @description A2P Registration Not Approved */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0206400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "A2P Registration Not Approved";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "A2P Registration Not Approved";
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0200401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Enough Credits */
            402: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0200402";
                        /** @constant */
                        status: 402;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Enough Credits";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "The organization does not have enough prepaid credits to send the message";
                    };
                };
            };
            /** @description Not Phone Number User */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0202403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Phone Number User";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Not Phone Number User";
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0200404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0201500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    listPhoneNumbers_v1: {
        parameters: {
            query?: {
                userId?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ListPhoneNumbersResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0400400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Bad Request";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0400401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0400403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Forbidden";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0400404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0401500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    listWebhooks_v1: {
        parameters: {
            query?: {
                userId?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: ({
                            /**
                             * @description The webhook's ID
                             * @example WHabcd1234
                             */
                            id: string;
                            /**
                             * @description The unique identifier of the user that created the webhook.
                             * @example US123abc
                             */
                            userId: string;
                            /**
                             * @description The unique identifier of the organization the webhook belongs to
                             * @example OR1223abc
                             */
                            orgId: string;
                            label: string | null;
                            /**
                             * @description The status of the webhook.
                             * @default enabled
                             * @example enabled
                             * @enum {string}
                             */
                            status: "enabled" | "disabled";
                            /**
                             * Format: uri
                             * @description The endpoint that receives events from the webhook.
                             * @example https://example.com/
                             */
                            url: string;
                            /**
                             * @description Webhook key
                             * @example example-key
                             */
                            key: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            updatedAt: string;
                            deletedAt: string | null;
                            events: ("message.received" | "message.delivered")[];
                            resourceIds: string[] | "*"[];
                        } | {
                            /**
                             * @description The webhook's ID
                             * @example WHabcd1234
                             */
                            id: string;
                            /**
                             * @description The unique identifier of the user that created the webhook.
                             * @example US123abc
                             */
                            userId: string;
                            /**
                             * @description The unique identifier of the organization the webhook belongs to
                             * @example OR1223abc
                             */
                            orgId: string;
                            label: string | null;
                            /**
                             * @description The status of the webhook.
                             * @default enabled
                             * @example enabled
                             * @enum {string}
                             */
                            status: "enabled" | "disabled";
                            /**
                             * Format: uri
                             * @description The endpoint that receives events from the webhook.
                             * @example https://example.com/
                             */
                            url: string;
                            /**
                             * @description Webhook key
                             * @example example-key
                             */
                            key: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            updatedAt: string;
                            deletedAt: string | null;
                            events: ("call.completed" | "call.ringing" | "call.recording.completed")[];
                            resourceIds: string[] | "*"[];
                        } | {
                            /**
                             * @description The webhook's ID
                             * @example WHabcd1234
                             */
                            id: string;
                            /**
                             * @description The unique identifier of the user that created the webhook.
                             * @example US123abc
                             */
                            userId: string;
                            /**
                             * @description The unique identifier of the organization the webhook belongs to
                             * @example OR1223abc
                             */
                            orgId: string;
                            label: string | null;
                            /**
                             * @description The status of the webhook.
                             * @default enabled
                             * @example enabled
                             * @enum {string}
                             */
                            status: "enabled" | "disabled";
                            /**
                             * Format: uri
                             * @description The endpoint that receives events from the webhook.
                             * @example https://example.com/
                             */
                            url: string;
                            /**
                             * @description Webhook key
                             * @example example-key
                             */
                            key: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            updatedAt: string;
                            deletedAt: string | null;
                            events: "call.summary.completed"[];
                            resourceIds: string[] | "*"[];
                        } | {
                            /**
                             * @description The webhook's ID
                             * @example WHabcd1234
                             */
                            id: string;
                            /**
                             * @description The unique identifier of the user that created the webhook.
                             * @example US123abc
                             */
                            userId: string;
                            /**
                             * @description The unique identifier of the organization the webhook belongs to
                             * @example OR1223abc
                             */
                            orgId: string;
                            label: string | null;
                            /**
                             * @description The status of the webhook.
                             * @default enabled
                             * @example enabled
                             * @enum {string}
                             */
                            status: "enabled" | "disabled";
                            /**
                             * Format: uri
                             * @description The endpoint that receives events from the webhook.
                             * @example https://example.com/
                             */
                            url: string;
                            /**
                             * @description Webhook key
                             * @example example-key
                             */
                            key: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            updatedAt: string;
                            deletedAt: string | null;
                            events: "call.transcript.completed"[];
                            resourceIds: string[] | "*"[];
                        })[];
                    };
                };
            };
            /** @description Invalid Version */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0305400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Invalid Version";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Invalid Version";
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0300401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0300403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Forbidden";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0300404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0301500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    getWebhookById_v1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            /**
                             * @description The webhook's ID
                             * @example WHabcd1234
                             */
                            id: string;
                            /**
                             * @description The unique identifier of the user that created the webhook.
                             * @example US123abc
                             */
                            userId: string;
                            /**
                             * @description The unique identifier of the organization the webhook belongs to
                             * @example OR1223abc
                             */
                            orgId: string;
                            label: string | null;
                            /**
                             * @description The status of the webhook.
                             * @default enabled
                             * @example enabled
                             * @enum {string}
                             */
                            status: "enabled" | "disabled";
                            /**
                             * Format: uri
                             * @description The endpoint that receives events from the webhook.
                             * @example https://example.com/
                             */
                            url: string;
                            /**
                             * @description Webhook key
                             * @example example-key
                             */
                            key: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            updatedAt: string;
                            deletedAt: string | null;
                            events: ("message.received" | "message.delivered")[];
                            resourceIds: string[] | "*"[];
                        } | {
                            /**
                             * @description The webhook's ID
                             * @example WHabcd1234
                             */
                            id: string;
                            /**
                             * @description The unique identifier of the user that created the webhook.
                             * @example US123abc
                             */
                            userId: string;
                            /**
                             * @description The unique identifier of the organization the webhook belongs to
                             * @example OR1223abc
                             */
                            orgId: string;
                            label: string | null;
                            /**
                             * @description The status of the webhook.
                             * @default enabled
                             * @example enabled
                             * @enum {string}
                             */
                            status: "enabled" | "disabled";
                            /**
                             * Format: uri
                             * @description The endpoint that receives events from the webhook.
                             * @example https://example.com/
                             */
                            url: string;
                            /**
                             * @description Webhook key
                             * @example example-key
                             */
                            key: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            updatedAt: string;
                            deletedAt: string | null;
                            events: ("call.completed" | "call.ringing" | "call.recording.completed")[];
                            resourceIds: string[] | "*"[];
                        } | {
                            /**
                             * @description The webhook's ID
                             * @example WHabcd1234
                             */
                            id: string;
                            /**
                             * @description The unique identifier of the user that created the webhook.
                             * @example US123abc
                             */
                            userId: string;
                            /**
                             * @description The unique identifier of the organization the webhook belongs to
                             * @example OR1223abc
                             */
                            orgId: string;
                            label: string | null;
                            /**
                             * @description The status of the webhook.
                             * @default enabled
                             * @example enabled
                             * @enum {string}
                             */
                            status: "enabled" | "disabled";
                            /**
                             * Format: uri
                             * @description The endpoint that receives events from the webhook.
                             * @example https://example.com/
                             */
                            url: string;
                            /**
                             * @description Webhook key
                             * @example example-key
                             */
                            key: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            updatedAt: string;
                            deletedAt: string | null;
                            events: "call.summary.completed"[];
                            resourceIds: string[] | "*"[];
                        } | {
                            /**
                             * @description The webhook's ID
                             * @example WHabcd1234
                             */
                            id: string;
                            /**
                             * @description The unique identifier of the user that created the webhook.
                             * @example US123abc
                             */
                            userId: string;
                            /**
                             * @description The unique identifier of the organization the webhook belongs to
                             * @example OR1223abc
                             */
                            orgId: string;
                            label: string | null;
                            /**
                             * @description The status of the webhook.
                             * @default enabled
                             * @example enabled
                             * @enum {string}
                             */
                            status: "enabled" | "disabled";
                            /**
                             * Format: uri
                             * @description The endpoint that receives events from the webhook.
                             * @example https://example.com/
                             */
                            url: string;
                            /**
                             * @description Webhook key
                             * @example example-key
                             */
                            key: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            updatedAt: string;
                            deletedAt: string | null;
                            events: "call.transcript.completed"[];
                            resourceIds: string[] | "*"[];
                        };
                    };
                };
            };
            /** @description Invalid Version */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0305400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Invalid Version";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Invalid Version";
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0300401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0300403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Forbidden";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0300404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0301500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    deleteWebhookById_v1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Invalid Version */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0305400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Invalid Version";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Invalid Version";
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0300401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0300403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Forbidden";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0300404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0301500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    createMessageWebhook_v1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    events: ("message.received" | "message.delivered")[];
                    /**
                     * @description Webhook's label
                     * @example my webhook label
                     */
                    label?: string;
                    resourceIds?: string[] | "*"[];
                    /**
                     * @description The status of the webhook.
                     * @default enabled
                     * @example enabled
                     * @enum {string}
                     */
                    status?: "enabled" | "disabled";
                    /**
                     * Format: uri
                     * @description The endpoint that receives events from the webhook.
                     * @example https://example.com
                     */
                    url: string;
                    /**
                     * @description The unique identifier of the user that creates the webhook. If not provided, default to workspace owner.
                     * @example US123abc
                     */
                    userId?: string;
                };
            };
        };
        responses: {
            /** @description Success */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            /**
                             * @description The webhook's ID
                             * @example WHabcd1234
                             */
                            id: string;
                            /**
                             * @description The unique identifier of the user that created the webhook.
                             * @example US123abc
                             */
                            userId: string;
                            /**
                             * @description The unique identifier of the organization the webhook belongs to
                             * @example OR1223abc
                             */
                            orgId: string;
                            label: string | null;
                            /**
                             * @description The status of the webhook.
                             * @default enabled
                             * @example enabled
                             * @enum {string}
                             */
                            status: "enabled" | "disabled";
                            /**
                             * Format: uri
                             * @description The endpoint that receives events from the webhook.
                             * @example https://example.com/
                             */
                            url: string;
                            /**
                             * @description Webhook key
                             * @example example-key
                             */
                            key: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            updatedAt: string;
                            deletedAt: string | null;
                            events: ("message.received" | "message.delivered")[];
                            resourceIds: string[] | "*"[];
                        };
                    };
                };
            };
            /** @description Invalid Version */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0305400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Invalid Version";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Invalid Version";
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0300401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0300403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Forbidden";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0300404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0301500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    createCallWebhook_v1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: uri
                     * @description The endpoint that receives events from the webhook.
                     * @example https://example.com/
                     */
                    url: string;
                    events: ("call.completed" | "call.ringing" | "call.recording.completed")[];
                    resourceIds?: string[] | "*"[];
                    /**
                     * @description The unique identifier of the user that creates the webhook. If not provided, default to workspace owner.
                     * @example US123abc
                     */
                    userId?: string;
                    /**
                     * @description Webhook's label
                     * @example my webhook label
                     */
                    label?: string;
                    /**
                     * @description The status of the webhook.
                     * @default enabled
                     * @example enabled
                     * @enum {string}
                     */
                    status?: "enabled" | "disabled";
                };
            };
        };
        responses: {
            /** @description Success */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            /**
                             * @description The webhook's ID
                             * @example WHabcd1234
                             */
                            id: string;
                            /**
                             * @description The unique identifier of the user that created the webhook.
                             * @example US123abc
                             */
                            userId: string;
                            /**
                             * @description The unique identifier of the organization the webhook belongs to
                             * @example OR1223abc
                             */
                            orgId: string;
                            label: string | null;
                            /**
                             * @description The status of the webhook.
                             * @default enabled
                             * @example enabled
                             * @enum {string}
                             */
                            status: "enabled" | "disabled";
                            /**
                             * Format: uri
                             * @description The endpoint that receives events from the webhook.
                             * @example https://example.com/
                             */
                            url: string;
                            /**
                             * @description Webhook key
                             * @example example-key
                             */
                            key: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            updatedAt: string;
                            deletedAt: string | null;
                            events: ("call.completed" | "call.ringing" | "call.recording.completed")[];
                            resourceIds: string[] | "*"[];
                        };
                    };
                };
            };
            /** @description Invalid Version */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0305400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Invalid Version";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Invalid Version";
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0300401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0300403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Forbidden";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0300404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0301500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    createCallSummaryWebhook_v1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    events: "call.summary.completed"[];
                    /**
                     * @description Webhook's label
                     * @example my webhook label
                     */
                    label?: string;
                    resourceIds?: string[] | "*"[];
                    /**
                     * @description The status of the webhook.
                     * @default enabled
                     * @example enabled
                     * @enum {string}
                     */
                    status?: "enabled" | "disabled";
                    /**
                     * Format: uri
                     * @description The endpoint that receives events from the webhook.
                     * @example https://example.com
                     */
                    url: string;
                    /**
                     * @description The unique identifier of the user that creates the webhook. If not provided, default to workspace owner.
                     * @example US123abc
                     */
                    userId?: string;
                };
            };
        };
        responses: {
            /** @description Success */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            /**
                             * @description The webhook's ID
                             * @example WHabcd1234
                             */
                            id: string;
                            /**
                             * @description The unique identifier of the user that created the webhook.
                             * @example US123abc
                             */
                            userId: string;
                            /**
                             * @description The unique identifier of the organization the webhook belongs to
                             * @example OR1223abc
                             */
                            orgId: string;
                            label: string | null;
                            /**
                             * @description The status of the webhook.
                             * @default enabled
                             * @example enabled
                             * @enum {string}
                             */
                            status: "enabled" | "disabled";
                            /**
                             * Format: uri
                             * @description The endpoint that receives events from the webhook.
                             * @example https://example.com/
                             */
                            url: string;
                            /**
                             * @description Webhook key
                             * @example example-key
                             */
                            key: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            updatedAt: string;
                            deletedAt: string | null;
                            events: "call.summary.completed"[];
                            resourceIds: string[] | "*"[];
                        };
                    };
                };
            };
            /** @description Invalid Version */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0305400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Invalid Version";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Invalid Version";
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0300401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0300403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Forbidden";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0300404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0301500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
    createCallTranscriptWebhook_v1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    events: "call.transcript.completed"[];
                    /**
                     * @description The webhook's label.
                     * @example my webhook label
                     */
                    label?: string;
                    resourceIds?: string[] | "*"[];
                    /**
                     * @description The status of the webhook.
                     * @example enabled
                     * @enum {string}
                     */
                    status?: "enabled" | "disabled";
                    /**
                     * Format: uri
                     * @description The endpoint that receives events from the webhook.
                     * @example https://example.com
                     */
                    url: string;
                    /**
                     * @description The ID of the user that creates the webhook. If not provided, default to workspace owner.
                     * @example US123abc
                     */
                    userId?: string;
                };
            };
        };
        responses: {
            /** @description Success */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data: {
                            /**
                             * @description The webhook's ID
                             * @example WHabcd1234
                             */
                            id: string;
                            /**
                             * @description The unique identifier of the user that created the webhook.
                             * @example US123abc
                             */
                            userId: string;
                            /**
                             * @description The unique identifier of the organization the webhook belongs to
                             * @example OR1223abc
                             */
                            orgId: string;
                            label: string | null;
                            /**
                             * @description The status of the webhook.
                             * @default enabled
                             * @example enabled
                             * @enum {string}
                             */
                            status: "enabled" | "disabled";
                            /**
                             * Format: uri
                             * @description The endpoint that receives events from the webhook.
                             * @example https://example.com/
                             */
                            url: string;
                            /**
                             * @description Webhook key
                             * @example example-key
                             */
                            key: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            createdAt: string;
                            /**
                             * Format: date-time
                             * @description The date the webhook was created at, in ISO_8601 format.
                             * @example 2022-01-01T00:00:00Z
                             */
                            updatedAt: string;
                            deletedAt: string | null;
                            events: "call.transcript.completed"[];
                            resourceIds: string[] | "*"[];
                        };
                    };
                };
            };
            /** @description Invalid Version */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0305400";
                        /** @constant */
                        status: 400;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Invalid Version";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                        /** @constant */
                        description: "Invalid Version";
                    };
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0300401";
                        /** @constant */
                        status: 401;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unauthorized";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0300403";
                        /** @constant */
                        status: 403;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Forbidden";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0300404";
                        /** @constant */
                        status: 404;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Not Found";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Unknown Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                        /** @constant */
                        code: "0301500";
                        /** @constant */
                        status: 500;
                        /** @constant */
                        docs: "https://openphone.com/docs";
                        /** @constant */
                        title: "Unknown";
                        trace?: string;
                        errors?: {
                            path: string;
                            message: string;
                            value?: unknown;
                            schema: {
                                type: string;
                            };
                        }[];
                    };
                };
            };
        };
    };
}
