name: Manual Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        type: string
      npm_tag:
        description: 'NPM tag (latest, beta, alpha)'
        required: true
        default: 'latest'
        type: choice
        options:
          - latest
          - beta
          - alpha

jobs:
  manual-publish:
    name: Manual Publish to NPM
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Download OpenAPI specification
        run: |
          curl -o openapi.json https://openphone-public-api-prod.s3.us-west-2.amazonaws.com/public/openphone-public-api-v1-prod.json

      - name: Generate TypeScript types
        run: bun run generate:types

      - name: Update version in package.json
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          echo "Updated version to ${{ github.event.inputs.version }}"

      - name: Run CI checks
        run: bun run ci

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Publish to npm
        run: npm publish --access public --tag ${{ github.event.inputs.npm_tag }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "v${{ github.event.inputs.version }}" -m "Release v${{ github.event.inputs.version }}"
          git push origin "v${{ github.event.inputs.version }}"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ github.event.inputs.version }}"
          release_name: "OpenPhone API SDK v${{ github.event.inputs.version }}"
          body: |
            ## OpenPhone API SDK v${{ github.event.inputs.version }}
            
            ### Installation
            ```bash
            npm install @openphone/api-sdk@${{ github.event.inputs.version }}
            ```
            
            ### What's New
            - TypeScript SDK for OpenPhone Public API
            - Full type safety with auto-generated types
            - Support for calls, messages, phone numbers, and webhooks
            - Modern ES modules with tree-shaking support
            
            ### Quick Start
            ```typescript
            import { OpenPhoneClient } from '@openphone/api-sdk';
            
            const client = new OpenPhoneClient({
              apiKey: 'your-api-key-here',
            });
            ```
          draft: false
          prerelease: ${{ github.event.inputs.npm_tag != 'latest' }}
