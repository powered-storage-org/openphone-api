name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

jobs:
  # Lint and Test Job
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run linter
        run: bun run lint

      - name: Run formatter check
        run: bun run format --check

      - name: Run tests
        run: bun run test

      - name: Build project
        run: bun run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  # Build and Publish Job
  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build project
        run: bun run build

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Release Job
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-and-publish
    if: github.event_name == 'release'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v5
        with:
          name: dist
          path: dist/

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.release.tag_name }}
          release_name: ${{ github.event.release.name }}
          body: |
            ## What's Changed
            
            This release includes:
            - TypeScript SDK for OpenPhone Public API
            - Full type safety with auto-generated types
            - Support for calls, messages, phone numbers, and webhooks
            - Modern ES modules with tree-shaking support
            
            ## Installation
            
            ```bash
            npm install @openphone/api-sdk
            ```
            
            ## Usage
            
            ```typescript
            import { OpenPhoneClient } from '@openphone/api-sdk';
            
            const client = new OpenPhoneClient({
              apiKey: 'your-api-key-here',
            });
            ```
          draft: false
          prerelease: false

  # Security Audit Job
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run security audit
        run: bun audit

      - name: Check for vulnerabilities
        run: |
          if bun audit --json | jq -e '.vulnerabilities | length > 0' > /dev/null; then
            echo "Security vulnerabilities found!"
            bun audit
            exit 1
          else
            echo "No security vulnerabilities found."
          fi
